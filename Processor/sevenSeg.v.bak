module sevenSeg(R,Seg);
	
	input [3:0] R;

	output [6:0] Seg;

	always @ (R)begin
		case (R)
			4'b0000 : assign Seg = 7b'1111110;
			4'b0001 : assign Seg = 7b'0110000;
			4'b0010 : assign Seg = 7b'1101101;
			4'b0011 : assign Seg = 7b'1111001;
			4'b0100 : assign Seg = 7b'0110011;
			4'b0101 : assign Seg = 7b'1011011;
			4'b0110 : assign Seg = 7b'1011111;
			4'b0111 : assign Seg = 7b'1110000;
			4'b1000 : assign Seg = 7b'1111111;
			4'b1001 : assign Seg = 7b'1110011;
			4'b1010 : assign Seg = 7b'1110111;
			4'b1011 : assign Seg = 7b'0011111;
			4'b1100 : assign Seg = 7b'1111000;
			4'b1101 : assign Seg = 7b'0111101;
			4'b1110 : assign Seg = 7b'1100111;
			4'b1111 : assign Seg = 7b'1111111;
			default : assign Seg = 7b'0000000;
		endcase
	end
endmodule



//			4'b0000 : assign Seg = 7b'0000001;
//			4'b0001 : assign Seg = 7b'1001111;
//			4'b0010 : assign Seg = 7b'0010010;
//			4'b0011 : assign Seg = 7b'0000110;
//			4'b0100 : assign Seg = 7b'1001100;
//			4'b0101 : assign Seg = 7b'0100100;
//			4'b0110 : assign Seg = 7b'0100000;
//			4'b0111 : assign Seg = 7b'0001111;
//			4'b1000 : assign Seg = 7b'0000000;
//			4'b1001 : assign Seg = 7b'0001100;
//			4'b1010 : assign Seg = 7b'0001000;
//			4'b1011 : assign Seg = 7b'1100000;
//			4'b1100 : assign Seg = 7b'0000111;
//			4'b1101 : assign Seg = 7b'1000010;
//			4'b1110 : assign Seg = 7b'0011000;
//			4'b1111 : assign Seg = 7b'0000000;
//			default : assign Seg = 7b'1111111;