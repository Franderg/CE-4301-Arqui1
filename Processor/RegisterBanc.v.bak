module RegisterBanc(ReadData1, ReadData2, WriteData,ReadAddr1, ReadAddr2, WriteAddr, RegWrite, clk);
    output [31:0] ReadData1, ReadData2;
    input [31:0] WriteData;
    input [4:0] ReadAddr1, ReadAddr2, WriteAddr;
    input RegWrite, clk;


    reg [31:0] Register [0:31];
    initial begin
        Register[0] = 32'd0;
		  Register[1] = 32'd1;
		  Register[2] = 32'd2;
		  Register[3] = 32'd3;
		  Register[4] = 32'd4;
		  Register[5] = 32'd5;
		  Register[6] = 32'd6;
		  Register[7] = 32'd7;
		
    end
    assign ReadData1 = Register[ReadAddr1];
    assign ReadData2 = Register[ReadAddr2];
    always @ (posedge clk) begin
        if (RegWrite) begin
            Register[WriteAddr] <= WriteData;
        end
    end

endmodule